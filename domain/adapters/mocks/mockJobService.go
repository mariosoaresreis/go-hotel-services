// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mariosoaresreis/go-hotel/domain/ports/interfaces (interfaces: JobService)

// Package services is a generated GoMock package.
package services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/mariosoaresreis/go-hotel/domain"
	dto "github.com/mariosoaresreis/go-hotel/domain/dto"
	errors "github.com/mariosoaresreis/go-hotel/errors"
)

// MockJobService is a mock of JobService interface.
type MockJobService struct {
	ctrl     *gomock.Controller
	recorder *MockJobServiceMockRecorder
}

// MockJobServiceMockRecorder is the mock recorder for MockJobService.
type MockJobServiceMockRecorder struct {
	mock *MockJobService
}

// NewMockJobService creates a new mock instance.
func NewMockJobService(ctrl *gomock.Controller) *MockJobService {
	mock := &MockJobService{ctrl: ctrl}
	mock.recorder = &MockJobServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobService) EXPECT() *MockJobServiceMockRecorder {
	return m.recorder
}

// AddJob mocks base method.
func (m *MockJobService) AddJob(arg0 dto.JobRequestDTO) (*domain.JobResponse, *errors.ApplicationError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddJob", arg0)
	ret0, _ := ret[0].(*domain.JobResponse)
	ret1, _ := ret[1].(*errors.ApplicationError)
	return ret0, ret1
}

// AddJob indicates an expected call of AddJob.
func (mr *MockJobServiceMockRecorder) AddJob(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddJob", reflect.TypeOf((*MockJobService)(nil).AddJob), arg0)
}
